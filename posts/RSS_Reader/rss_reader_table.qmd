---
title: "rss_reader_table"
format: html
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
library(tidyverse)
library(dplyr)
library(DT)
#library(purrr)
#library(stringr)
library(lubridate)
library(tidyRSS)
library(duckdb)
```

You can add options to executable code like this 

```{r}
my_feed_data <- tidyfeed("https://rss.arxiv.org/rss/cs.LG") |>
  select(feed_pub_date,item_title, item_link, item_description)
```

```{r}
my_feed_data_summary <- my_feed_data |>
  select(item_title, feed_pub_date, item_link,
         item_description) 
```


```{r}
#changed item_title to item_desc
my_rss_feed <- my_feed_data_summary |> mutate(
    item_title = str_glue("<a target='_blank' title='{item_title}' href='{item_link}' rel='noopener'>{item_title}</a>")
)
```


```{r}
my_rss_feed_table <- my_rss_feed |> select(-item_link)
#my_feed_data_summary
```


```{r}
my_rss_feed_table
```



```{r}
# Build Table in DuckDb


```


:::{.column-page}

```{r}
DT::datatable(my_rss_feed_table, filter = 'top', escape = FALSE, rownames = FALSE,
  options = list(
  search = list(regex = TRUE, caseInsensitive = TRUE),  
  pageLength = 10,
  lengthMenu = c(10, 25, 50, 100, 200),
  autowidth = TRUE,
  columnDefs = list(list(width = '80%', targets = list(2)))
  )
)
```

:::


